services:
  frontend:
    container_name: mgl-frontend
    build:
      context: client/
      dockerfile: frontend.Dockerfile
    image: mgl-front
    env_file:
      - ./client/.env.production
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - mgl-net
  backend:
    container_name: mgl-backend
    build:
      context: api/
      dockerfile: backend.Dockerfile
    image: mgl-back
    env_file:
      - ./api/.env.production
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - mgl-net
  db:
    image: mysql:8.0
    container_name: mgl-DB
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_TCP_PORT: ${MYSQL_TCP_PORT}
    volumes:
      - mgl-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - mgl-net
    ## need to create the params first by using openssl  dhparam  -out  ssl-dhparams.pem  2048
  nginx:
    image: "nginx:stable-alpine-slim"
    container_name: "mgl-nginx"
    hostname: "nginx"
    restart: "unless-stopped"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot_etc:/etc/letsencrypt
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./.conf.d:/etc/nginx/conf.d
      - ./ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem
      - ./log:/var/log/nginx
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mgl-net
    depends_on:
      - frontend
      - backend

  certbot:
    image: certbot/dns-cloudflare
    container_name: "nginx-certbot"
    restart: "unless-stopped"
    env_file:
      .env
    volumes:
      - certbot_etc:/etc/letsencrypt
      - certbot_lib:/var/lib/letsencrypt
      - ./cloudflare.ini:/cloudflare.ini
      - ./certbot-manager.sh:/certbot-manager.sh:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - mgl-net
    entrypoint: ["/bin/sh", "/certbot-manager.sh"]
    depends_on:
      - nginx
volumes:
  mgl-data:
  certbot_etc:
    name: certbot_etc
  certbot_lib:
    name: certbot_lib
networks:
  mgl-net:
    name: mgl-net
    driver: bridge
