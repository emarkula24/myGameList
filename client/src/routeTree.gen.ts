/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as CommunityImport } from './routes/community'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as ResultsQueryImport } from './routes/results.$query'
import { Route as GamesGuidImport } from './routes/games.$guid'
import { Route as GamelistUsernameImport } from './routes/gamelist.$username'
import { Route as AuthProfileImport } from './routes/_auth.profile'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CommunityRoute = CommunityImport.update({
  id: '/community',
  path: '/community',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResultsQueryRoute = ResultsQueryImport.update({
  id: '/results/$query',
  path: '/results/$query',
  getParentRoute: () => rootRoute,
} as any)

const GamesGuidRoute = GamesGuidImport.update({
  id: '/games/$guid',
  path: '/games/$guid',
  getParentRoute: () => rootRoute,
} as any)

const GamelistUsernameRoute = GamelistUsernameImport.update({
  id: '/gamelist/$username',
  path: '/gamelist/$username',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/community': {
      id: '/community'
      path: '/community'
      fullPath: '/community'
      preLoaderRoute: typeof CommunityImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/gamelist/$username': {
      id: '/gamelist/$username'
      path: '/gamelist/$username'
      fullPath: '/gamelist/$username'
      preLoaderRoute: typeof GamelistUsernameImport
      parentRoute: typeof rootRoute
    }
    '/games/$guid': {
      id: '/games/$guid'
      path: '/games/$guid'
      fullPath: '/games/$guid'
      preLoaderRoute: typeof GamesGuidImport
      parentRoute: typeof rootRoute
    }
    '/results/$query': {
      id: '/results/$query'
      path: '/results/$query'
      fullPath: '/results/$query'
      preLoaderRoute: typeof ResultsQueryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthProfileRoute: typeof AuthProfileRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthProfileRoute: AuthProfileRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/community': typeof CommunityRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/profile': typeof AuthProfileRoute
  '/gamelist/$username': typeof GamelistUsernameRoute
  '/games/$guid': typeof GamesGuidRoute
  '/results/$query': typeof ResultsQueryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/community': typeof CommunityRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/profile': typeof AuthProfileRoute
  '/gamelist/$username': typeof GamelistUsernameRoute
  '/games/$guid': typeof GamesGuidRoute
  '/results/$query': typeof ResultsQueryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/community': typeof CommunityRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/gamelist/$username': typeof GamelistUsernameRoute
  '/games/$guid': typeof GamesGuidRoute
  '/results/$query': typeof ResultsQueryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/community'
    | '/login'
    | '/register'
    | '/profile'
    | '/gamelist/$username'
    | '/games/$guid'
    | '/results/$query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/community'
    | '/login'
    | '/register'
    | '/profile'
    | '/gamelist/$username'
    | '/games/$guid'
    | '/results/$query'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/community'
    | '/login'
    | '/register'
    | '/_auth/profile'
    | '/gamelist/$username'
    | '/games/$guid'
    | '/results/$query'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  CommunityRoute: typeof CommunityRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  GamelistUsernameRoute: typeof GamelistUsernameRoute
  GamesGuidRoute: typeof GamesGuidRoute
  ResultsQueryRoute: typeof ResultsQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  CommunityRoute: CommunityRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  GamelistUsernameRoute: GamelistUsernameRoute,
  GamesGuidRoute: GamesGuidRoute,
  ResultsQueryRoute: ResultsQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about",
        "/community",
        "/login",
        "/register",
        "/gamelist/$username",
        "/games/$guid",
        "/results/$query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/profile"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/community": {
      "filePath": "community.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_auth/profile": {
      "filePath": "_auth.profile.tsx",
      "parent": "/_auth"
    },
    "/gamelist/$username": {
      "filePath": "gamelist.$username.tsx"
    },
    "/games/$guid": {
      "filePath": "games.$guid.tsx"
    },
    "/results/$query": {
      "filePath": "results.$query.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
